from telebot import types
from config import TOKEN
import telebot

TO_CHAT_ID = '-1002089861656'

bot = telebot.TeleBot(TOKEN)

requests_queue = []


@bot.message_handler(commands=['start'])
def welcome(message):
    bot.send_message(message.chat.id,
                     """–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!, {0.first_name}!\n
–ù–∞ —Å–≤—è–∑–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä –æ—Ç–¥–µ–ª–∞ –¥–æ—Å—Ç–∞–≤–∫–∏, –í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ—Å—ã–ª–æ–∫ –∏–ª–∏ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ —Å—Ç–∞—Ç—å –Ω–∞—à–∏–º –∫—É—Ä—å–µ—Ä–æ–º? üôÇ

–†–∞–±–æ—Ç–∞–µ–º –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º:

‚ñ∂Ô∏è –ë–∞–ª–∏-–ú–æ—Å–∫–≤–∞ –∏ –ú–æ—Å–∫–≤–∞-–ë–∞–ª–∏
‚ñ∂Ô∏è –î—É–±–∞–π - –ú–æ—Å–∫–≤–∞ –∏ –ú–æ—Å–∫–≤–∞ - –î—É–±–∞–π
‚ñ∂Ô∏è –ü—Ö—É–∫–µ—Ç - –ú–æ—Å–∫–≤–∞ –∏ –ú–æ—Å–∫–≤–∞ - –ü—Ö—É–∫–µ—Ç
‚ñ∂Ô∏è –ü—Ö—É–∫–µ—Ç - –ë–∞–ª–∏ –∏ –ë–∞–ª–∏ - –ü—Ö—É–∫–µ—Ç
‚ñ∂Ô∏è –ê—Ä–≥–µ–Ω—Ç–∏–Ω–∞ - –ú–æ—Å–∫–≤–∞ –∏ –ú–æ—Å–∫–≤–∞-–ê—Ä–≥–µ–Ω—Ç–∏–Ω–∞""".format(
                         message.from_user, bot.get_me()),
                     parse_mode='html')
    bot.register_next_step_handler(message, help_bot)


# –§—É–Ω–∫—Ü–∏—è, –æ—Ç–ø—Ä–∞–≤–ª—è—é—â–∞—è –≤–æ–ø—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏
def help_bot(message):
    requests_queue.append((message.message_id, message.chat.id))
    bot.forward_message(TO_CHAT_ID, message.chat.id, message.message_id)
    markup_inline = types.InlineKeyboardMarkup([[
        types.InlineKeyboardButton(text='–û—Ç–≤–µ—Ç–∏—Ç—å', callback_data=f'answer{message.chat.id}')
    ]])
    bot.send_message(TO_CHAT_ID, f"–î–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup_inline)
    bot.register_next_step_handler(message, help_bot)


@bot.message_handler(commands=["requests"], func=lambda m: int(m.chat.id) == int(TO_CHAT_ID))
def all_messages(message):
    bot.send_message(message.chat.id, "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã:")
    for i, req in enumerate(requests_queue):
        bot.forward_message(TO_CHAT_ID, req[1], req[0])
        markup_inline = types.InlineKeyboardMarkup([[
            types.InlineKeyboardButton(text='–û—Ç–≤–µ—Ç–∏—Ç—å', callback_data=f'answer{req[1]}')
        ]])
        bot.send_message(message.chat.id, f"–î–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup_inline)


def send_answer(message: types.Message, call, chat_id):
    bot.send_message(call.message.chat.id, "–û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")
    bot.send_message(chat_id, message.text)
    for i, req in enumerate(requests_queue):
        if int(req[1]) == int(chat_id):
            del requests_queue[i]


@bot.callback_query_handler(func=lambda call: True)
def answer_callback(call: types.CallbackQuery):
    if call.data.startswith("answer"):
        chat_id = int(call.data[6:])

        bot.send_message(call.message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ –∑–∞–ø—Ä–æ—Å")
        bot.register_next_step_handler(call.message, lambda msg: send_answer(msg, call, chat_id))


bot.polling(none_stop=True)